{% extends '/base.html.twig' %}

{% block title %}ItemBay - Shop{% endblock %}

{% block body %}
    <div class="row text-white mt-5 mx-2">
        <div class="col-md-2">
            <form action="">
                <h3><label for="search">Rechercher par nom</label></h3>
                <input type="search" name="search" id="search" class="form-control" value="{{ search }}">
                <h3 class="mt-3"><label for="orderBy">Trier par:</label></h3>
                <select id="orderBy" name="orderBy" class="form-control form-select">
                    {% set possibilites = [
                        {
                            'value' : 'cheaper',
                            'label' : 'Prix Croissant'
                        },
                        {
                            'value' : 'expensive',
                            'label' : 'Prix Décroissant'
                        },
                        {
                            'value' : 'az',
                            'label' : 'Nom A-Z'
                        },
                        {
                            'value' : 'za',
                            'label' : 'Nom Z-A'
                        }
                    ] %}
                    <option value="">Défaut</option>
                    {% for possibility in possibilites %}
                        {% set selected = '' %}
                        {% if requestData.orderBy is defined and possibility.value == requestData.orderBy %}
                            {% set selected = 'selected' %}
                        {% endif %}
                        <option value="{{ possibility.value }}" {{ selected }}>{{ possibility.label }}</option>
                    {% endfor %}
                </select>
                <h3 class="mt-4">Filtres</h3>
                <div id="accordion" class="text-black accordion accordion-flush">
                    <div class="accordion-item">
                        <h5 class="accordion-header">
                            <button type="button" class="accordion-button collapsed" data-toggle="collapse" data-target="#collapseNature" aria-controls="collapseNature">
                                Catégories d'objet <span class="natureCount" style="margin-left: 5px;">{{ selectedItemNatures|length > 0 ? '(' ~ selectedItemNatures|length ~ ')' }}</span>
                            </button>
                        </h5>
                        <div id="collapseNature" class="accordion-collapse collapse" data-parent="#accordion">
                            <div class="accordion-body">
                                {% for nature in itemNatures %}
                                    {% set checked = '' %}
                                    {% if nature.id in selectedItemNatures %}
                                        {% set checked = 'checked' %}
                                    {% endif %}
                                    <div>
                                        <input type="checkbox" id="nature-{{ nature.id }}" name="itemNature[]" value="{{ nature.id }}" {{ checked }}>
                                        <label for="nature-{{ nature.id }}">{{ nature.name }}</label>
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                    <div class="accordion-item">
                        <h5 class="accordion-header">
                            <button type="button" class="accordion-button collapsed" data-toggle="collapse" data-target="#collapseType" aria-controls="collapseType">
                                Types d'objet <span class="typeCount ml-2" style="margin-left: 5px;">{{ selectedItemTypes|length > 0 ? '(' ~ selectedItemTypes|length ~ ')' }}</span>
                            </button>
                        </h5>
                        <div id="collapseType" class="accordion-collapse collapse" data-parent="#accordion">
                            <div class="accordion-body">
                                {% include '/filter/item_type_filter.html.twig' with {
                                    'itemTypes' : itemTypes,
                                    'selectedItemTypes' : selectedItemTypes,
                                } %}
                            </div>
                        </div>
                    </div>
                    <div class="accordion-item">
                        <h5 class="accordion-header">
                            <button type="button" class="accordion-button collapsed" data-toggle="collapse" data-target="#collapsePrice" aria-controls="collapsePrice">
                                Prix
                            </button>
                        </h5>
                        <div id="collapsePrice" class="accordion-collapse collapse" data-parent="#accordion">
                            <div class="accordion-body">
                                {% set id = '' | randomId %}
                                <label for="minPriceRange" class="form-label">Prix minimum</label>
                                {% set minValue = 0 %}
                                {% if minPrice is defined %}
                                    {% set minValue = minPrice %}
                                {% endif %}
                                <input type="range" class="form-range" id="minPriceRange" min="0" max="10000" value="{{ minValue }}" name="priceRange[min]">
                                <div data-range-value data-target="#minPriceRange">
                                    {% if minPrice is defined %}
                                        {{ minPrice | itemPrice | raw }}
                                    {% endif %}
                                </div>
                                <label for="maxPriceRange" class="form-label">Prix maximum</label>
                                {% set maxValue = 0 %}
                                {% if maxPrice is defined %}
                                    {% set maxValue = maxPrice %}
                                {% endif %}
                                <input type="range" class="form-range" id="maxPriceRange" min="0" max="10000" value="{{ maxValue }}" name="priceRange[max]">
                                <div data-range-value data-target="#maxPriceRange">
                                    {% if maxPrice is defined %}
                                        {{ maxPrice | itemPrice | raw }}
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary form-control mt-5">Filtrer</button>
            </form>
        </div>
        <div class="col-md-9">
            <ul class="d-flex flex-wrap gap-5 text-black">
                {% if items | length > 0 %}
                    {% for item in items %}
                        {% include '/item/list_item.html.twig' with {
                            'item': item,
                        } %}
                    {% endfor %}
                {% else %}
                    <div class="alert alert-warning w-100" role="alert">
                        Aucun résultat
                    </div>
                {% endif %}
            </ul>

            <div class="d-flex justify-content-center">
                {{ knp_pagination_render(items) }}
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        $(document).ready(function () {
	        $('#itemTypeSelect').val({{ selectedItemTypes|json_encode|raw }}).trigger('change');


            document.querySelectorAll('[name="itemNature[]"]').forEach(function (checkbox) {
                checkbox.addEventListener('change', function (event) {
                    let checked = document.querySelectorAll('[name="itemNature[]"]:checked');
                    let count = document.querySelector('.natureCount');
					if (checked.length === 0) {
						count.innerHTML = '';
                    } else {
                        count.innerHTML = '(' + checked.length + ')';
						resetItemTypes();
					}
                    $('#itemTypeSelect').val(null).trigger('change');
                });
            });

	        $('#itemTypeSelect').on('change', function (e) {
		        let count = document.querySelector('.typeCount');
				let value = e.target.selectedOptions.length;
				if (value === 0) {
					count.innerHTML = '';
				} else {
					count.innerHTML = '(' + e.target.selectedOptions.length + ')';
                }

	        });
	        resetItemTypes();
        });

        function resetItemTypes() {
			$('#itemTypeSelect option').prop('disabled', false);
	        let allOptionsToHide = [];
	        document.querySelectorAll('[name="itemNature[]"]:not(:checked)').forEach((ch) => {
		        let value = ch.value;
		        let options = document.querySelectorAll('#itemTypeSelect option[data-nature="' + value + '"]');
		        options.forEach(function (option) {
			        allOptionsToHide.push(option);
		        });
	        })
	        allOptionsToHide.forEach(function (option) {
		        option.disabled = true;
	        });
        }
    </script>
{% endblock %}