{% extends '/base.html.twig' %}

{% block body %}

    <div class="card m-5">
        
        <div class="row row-cols-lg-2 m-2">
            <div class="col-md-5 d-flex align-items-center">
                <img src="{{ item.imageUrl }}" class="card-img rounded-left" alt="{{ item.name }}" loading="lazy" height="60%" width="60%" onerror="this.src = '/images/no-photo.png'">
            </div>
            <div class="col-md-5 d-flex">
                <div class="card-body d-flex flex-column">
                    <h1 class="card-title">{{ item.name }}</h1>
                    {{ item.averageRating }}
                    <hr>
                    <h5 class="card-title">Description : </h5>
                    <p class="card-text text-justify">{{ item.description }}</p>
                    <hr>
                    <h5 class="card-title">AvinputDisplayis & commentaires client : </h5>
            </div>
            <div class="col-md-4 d-flex border border-dark-subtle rounded m-3">
                <div class="card-body d-flex flex-column">
                    <h3 class="card-text"><b>{{ item.buyPrice | itemPrice | raw }}</b></h3>
                    <div style="border: 1px solid black;"></div>
                    <p></p>
                    <p class="card-text"><b>Stock disponible : </b>{{ item.id | itemStock }}</p>
                    <div class="form-group">
                        <label for="quantity">QuantitÃ© :</label>
                            {% set selectDisplay = '' %}
                            {% set inputDisplay = 'd-none' %}
                            <div class="col-md-12 {{ inputDisplay }} row">
                                <div class="col-md-3">
                                    <input class="form-control item-quantity-input col-md-2" type="number" id="item_quantity[{{ item.id }}]" data-id="{{ item.id }}" min="1" max="{{ item.id | itemStock }}">
                                </div>
                                <div class="col-md-3 d-flex align-items-center justify-content-center d-none">
                                    <button class="btn btn-sm btn-primary validate-basket-change-btn" type="button">Mettre Ã  jour</button>
                                </div>
                            </div>
                            <select class="form-control item-quantity-input col-md-2" id="item_quantity[{{ item.id }}]" data-id="{{ item.id }}">
                                {% set max = 9 %}
                                
                                {% for i in 1..max %}
                                    <option value="{{ i }}" >{{ i }}</option>
                                {% endfor %}
                                <option value="10">10+</option>
                            </select>
                    </div>
                    <div class="justify-content-end align-items-center my-3">
                        {% if app.user %}
                            <button class="btn btn-primary basket-add-item mr-3" onclick="addItem()">Ajouter au panier</button>
                        {% else %}
                            <a href="{{ path('app_login') }}" class="btn btn-primary mr-3">Connectez-vous pour ajouter au panier</a>
                        {% endif %}
                        <p class="my-2">ðŸ”’Transaction sÃ©curisÃ©e</p>
                    </div>
                </div>
            </div>
        </div>

    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>   
		async function addItem() {
			await apiFetch('/basket/default/add/{{ item.id }}')
			await refreshBasketCount();
		}

        async function updateInputDisplay(el) {
			let id = el.dataset.id;
			let value = el.value;
			if (value === '' || value <= 0) {
				value = 1;
			}
			document.querySelector('.item-hidden-input[data-id="' + id + '"]').value = value;

			let input = document.querySelector('input.item-quantity-input[data-id="' + id + '"]');
			let select = document.querySelector('select.item-quantity-input[data-id="' + id + '"]');
			if (value >= 10) {
				input.value = value;
				input.parentElement.parentElement.classList.remove('d-none');
				input.parentElement.nextElementSibling.classList.remove('d-none');
				select.parentElement.classList.add('d-none');
			} else {
				$(select).val(value).trigger('change');
				select.parentElement.classList.remove('d-none');
				input.parentElement.parentElement.classList.add('d-none');
			}
            await makeBasketDifference(id, value);
			await reloadTotal();
        }
        
        document.addEventListener('DOMContentLoaded', async function () {
            document.querySelectorAll('.item-quantity-input').forEach(function (input) {
                console.log(input)
                if (input.tagName === 'SELECT') {
                    $(input).select2({
                        minimumResultsForSearch: Infinity,
                        width: '100%'
                    });
                    $(input).on('select2:select', async function (e) {
                        await updateInputDisplay(this);
                    });
                }
            });
        });

    </script>
{% endblock %}