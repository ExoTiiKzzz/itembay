{% extends '/base.html.twig' %}

{% block title %}
    {{ item.name }}
{% endblock %}

{% block body %}

    <div class="card m-5">  
        <div class="row m-2 p-3">

            <div class="col-md-4 col-sm-12 align-items-center">
                <img src="{{ item.imageUrl }}" class="card-img rounded-left align-top" alt="{{ item.name }}" loading="lazy" height="300" width="300" onerror="this.src = '/images/no-photo.png'">
            </div>

            <div class="col-md-5 col-sm-12 d-flex">
                <div class="card-body d-flex flex-column">
                    <h1 class="card-title">{{ item.name }}</h1>
                    <div>Niveau {{ item.level }}</div><hr>
                    {% set navTabs = [
                        {
                            'title': 'Informations',
                            'icon': 'fas fa-info-circle',
                            'active': true,
                            'id': 'infos-tab'
                        },
                        {
                            'title': 'Avis & commentaires client',
                            'icon': 'fas fa-comments',
                            'active': false,
                            'id': 'reviews-tab'
                        },
                        {
                            'title': 'Lots',
                            'icon': 'fas fa-shopping-basket',
                            'active': false,
                            'id': 'batchs-tab'
                        },
                    ] %}

                    <div class="tabs-container">
                        {% include '/common/tabs/tabs.html.twig' with {
                            tabs: navTabs,
                            cssClass: 'mt-3',
                        } %}

                        <div class="mt-3">
                            <div class="tab active" data-tab="infos-tab">
                                <h5 class="card-title">Description </h5>
                                <p class="card-text text-justify">{{ item.description }}</p>
                            </div>

                            <div class="tab" data-tab="reviews-tab">
                                <h5 class="card-title">Avis &amp; commentaires client<br></h5>
                                {% if item.reviews | length == 0 %}
                                    <div class="alert alert-info">Il n'y a pas d'√©valuations ou de commentaires clients pour ce produit.</div>
                                {% else %}
                                    {% for review in item.firstNReviews %}
                                        <div class="border-1 border-primary p-2 radius-2" style="border: solid">
                                            <div class="d-flex align-items-center justify-content-between">
                                                <div>
                                                    <img src="{{ review.account.class.imageUrl }}" alt="{{ review.account.class.name }}" height="34" width="34" class="img-circle" onerror="this.src = '/images/no-photo.png'"><b>{{ review.account }}</b>
                                                </div>
                                                <div>
                                                    {{ review.note | reviewRating | raw }}
                                                </div>
                                            </div>
                                            <p class="ms-review-comment ms-2 mt-2" data-tooltip data-html="true">{{ review.comment }}</p>

                                            <div class="d-flex justify-content-end">
                                                <a class="btn btn-primary" href="{{ path('app_review_show', {'id': review.id }) }}">
                                                    Voir plus
                                                </a>
                                            </div>
                                        </div>
                                    {% endfor %}
                                {% endif %}
                            </div>

                            <div class="tab" data-tab="batchs-tab">
                                <h5 class="card-title">Lots</h5>
                                <div class="batchs-container">
                                    {% include '/item/parts/batchs.html.twig' with {
                                        'batchs': batchs,
                                    } only %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-3 col-sm-12 d-flex border border-dark-subtle rounded">
                <div class="card-body d-flex flex-column">
                    <h3 class="card-text"><b>{{ item.buyPrice | itemPrice | raw }}</b></h3>
                    <div style="border: 1px solid black;"></div><br>
                    {{ item.id | itemRating | raw }}<br>
                    <p>
                        Cat√©gories : {{ item.itemNature.name }}<br>
                        Type : {{ item.itemType }}<br><br>
                        Prix de revente : {{ item.sellPrice | itemPrice | raw }}<br>
                        Perte : {{ (item.buyPrice - item.sellPrice) | itemPrice | raw }}<br>
                    </p><br>
                    <p class="card-text"><b>Stock disponible : </b>{{ item.id | itemStock }}</p>
                    <div class="form-group">
                        <label for="quantity">Quantit√© :</label>
                        {% set max = item.id | itemStock > 9 ? 9 : item.id | itemStock %}
                        {% if item.id | itemStock == 0 %}
                            Indisponible
                        {% elseif item.id | itemStock == 1 %}
                            1
                        {% else %}
                            <select class="form-control item-quantity-input col-md-2" id="item_quantity[{{ item.id }}]" data-id="{{ item.id }}">
                                {% for i in 1..max %}
                                    <option value="{{ i }}">{{ i }}</option>
                                {% endfor %}
                                {% if item.id | itemStock > 9 %}
                                    <option value="10">10+</option>
                                {% endif %}
                            </select>
                        {% endif %}
                    </div>
                    <div class="justify-content-end align-items-center my-3">
                        {% if app.user %}
                            {% if item.id | itemStock == 0 %}
                                <button class="form-control btn btn-primary basket-add-item mr-3">Hors stock</button>
                            {% else %}
                                <button class="form-control btn btn-primary basket-add-item mr-3" onclick="addItem()">Ajouter au panier</button>
                            {% endif %}
                        {% else %}
                            <a href="{{ path('app_login') }}" class="btn btn-primary mr-3">Connectez-vous pour ajouter au panier</a>
                        {% endif %}
                        <p class="my-2">üîíTransaction s√©curis√©e</p><hr>
                        {% if isFarmable %}
                            <a class="form-control btn btn-secondary" href="{{ path('app_item_farm', {'uuid': item.uuid }) }}">
                                <i class="fas fa-seedling"></i> R√©colter
                            </a>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>   
		async function addItem() {
			await apiFetch('/basket/default/add/{{ item.id }}')
			await refreshBasketCount();
		}

        async function updateInputDisplay(el) {
			let id = el.dataset.id;
			let value = el.value;
			if (value === '' || value <= 0) {
				value = 1;
			}
			document.querySelector('.item-hidden-input[data-id="' + id + '"]').value = value;

			let input = document.querySelector('input.item-quantity-input[data-id="' + id + '"]');
			let select = document.querySelector('select.item-quantity-input[data-id="' + id + '"]');
			if (value >= 10) {
				input.value = value;
				input.parentElement.parentElement.classList.remove('d-none');
				input.parentElement.nextElementSibling.classList.remove('d-none');
				select.parentElement.classList.add('d-none');
			} else {
				$(select).val(value).trigger('change');
				select.parentElement.classList.remove('d-none');
				input.parentElement.parentElement.classList.add('d-none');
			}
            await makeBasketDifference(id, value);
			await reloadTotal();
        }
        
        document.addEventListener('DOMContentLoaded', async function () {
            document.querySelectorAll('.item-quantity-input').forEach(function (input) {
                if (input.tagName === 'SELECT') {
                    $(input).select2({
                        minimumResultsForSearch: Infinity,
                        width: '100%'
                    });
                    $(input).on('select2:select', async function (e) {
                        await updateInputDisplay(this);
                    });
                }
            });
        });

		let buyBatch = async function (id) {
			let url = '{{ path('app_batch_buy', {'id': 'batch_id'}) }}';
			url = url.replace('batch_id', id);
	        let res = await apiFetch(url);

            if (res.success) {
                notif('Lot achet√©', 'success');
                document.querySelector('.batchs-container').innerHTML = res.data.html;
                await refreshBalance();
            }
		}

    </script>
{% endblock %}