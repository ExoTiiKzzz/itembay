{% extends 'base.html.twig' %}

{% block title %}{{ app.user.activeAccount.name ~ ' | ' ~ playerProfession.profession.name }}{% endblock %}

{% block body %}

    <style>

        .recipe-row {
            background-color: #171717;
            margin: 10px 0;
        }

        .recipe-item-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
        }

        .gallery {
            display: flex;
            height: 100%;
            flex-wrap: wrap;
            align-items: center;
        }

        .gallery-item {
            position: relative;
            width: 50px;
            height: 50px;
            margin: 5px;
        }

        .gallery-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            background-color: var(--background-color);
        }

        .gallery-quantity {
            position: absolute;
            bottom: 0;
            right: 0;
            background-color: rgba(0, 0, 0, 0.5);
            color: white;
            padding: 0 5px;
        }

        .jobs-list {
            max-height: 80vh;
            overflow-y: auto;
            border-radius: 0;
        }

        .jobs-list::-webkit-scrollbar {
            width: 6px;
        }

        .jobs-list::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        .jobs-list::-webkit-scrollbar-thumb {
            background: var(--background-color);
        }

        .jobs-list::-webkit-scrollbar-thumb:hover {
            background: #bab9b9;
        }
    </style>

    <div class="container">
        <div class="row pt-3">
            <div class="col-3">
                <ul class="list-group jobs-list">
                    {% set activeClass = '' %}
                    {% for playerProfessionItem in playerProfession.player.playerProfessions %}
                        {% if playerProfessionItem.profession.id == playerProfession.profession.id %}
                            {% set activeClass = 'active' %}
                        {% else %}
                            {% set activeClass = '' %}
                        {% endif %}
                        <a class="list-group-item {{ activeClass }}" href="{{ path('app_player_job', {'id': playerProfessionItem.profession.id}) }}" title="{{ playerProfessionItem.profession.name }}" data-tooltip>
                            <div>
                                {{ playerProfessionItem.profession.name }}
                            </div>
                            <div>
                                Niveau: {{ playerProfessionItem.exp | professionLevelFromExp }}
                            </div>
                        </a>
                    {% endfor %}
                </ul>
            </div>
            <div class="col-9 container text-white">
                <h1 class="text-center">
                    {{ playerProfession.profession.name }}
                </h1>
                Niveau actuel: <span class="level-container">{{ playerProfession.exp | professionLevelFromExp }}</span>

                {% set width = 0 %}
                {% if playerProfession.exp | professionNextLevelMinExp > 0 %}
                    {% set width = (playerProfession.exp - playerProfession.exp | professionActualLevelMinExp) / (playerProfession.exp | professionNextLevelMinExp - playerProfession.exp | professionActualLevelMinExp) * 100 %}
                {% endif %}

                <div class="progress">
                    <div class="progress-bar bg-primary" role="progressbar" style="width: {{ width }}%" aria-valuenow="{{ playerProfession.exp }}"
                         aria-valuemin="{{ playerProfession.exp | professionActualLevelMinExp }}"
                         aria-valuemax="{{ playerProfession.exp | professionNextLevelMinExp }}">
                    </div>
                </div>
                <div class="text-center">
                    {{ width }}% ({{ playerProfession.exp | professionActualLevelMinExp }}xp / {{ playerProfession.exp | professionNextLevelMinExp }}xp)
                </div>

                <h3 class="text-center">
                    Recettes
                </h3>

                <div id="accordion" class="text-black accordion accordion-flush my-3">
                    <div class="accordion-item">
                        <h5 class="accordion-header">
                            <button type="button" class="accordion-button collapsed" data-toggle="collapse" data-target="#collapseNature" aria-controls="collapseNature">
                                Filtres
                            </button>
                        </h5>
                        <div id="collapseNature" class="accordion-collapse collapse" data-parent="#accordion">
                            <div class="accordion-body">
                                <form method="get">
                                    <div class="form-check form-switch">
                                        {% set checked = '' %}
                                        {% if filters|length > 0 and filters.onlyCraftables is defined and filters.onlyCraftables == 'on' %}
                                            {% set checked = 'checked' %}
                                        {% endif %}
                                        <label class="form-check-label" for="onlyCraftables">Afficher uniquement les recettes possibles</label>
                                        <input class="form-check-input" type="checkbox" id="onlyCraftables" name="filter[onlyCraftables]" {{ checked }}>
                                    </div>

                                    <div class="form-group">
                                        <label class="form-label" for="minLevel">Niveau minimum</label>
                                        <input class="form-control" type="number" id="minLevel" name="filter[minLevel]"
                                               value="{{ filters.minLevel ?? 1 }}">
                                    </div>

                                    <div class="form-group">
                                        <label class="form-label" for="maxLevel">Niveau maximum</label>
                                        <input class="form-control" type="number" id="maxLevel" name="filter[maxLevel]"
                                               value="{{ filters.maxLevel ?? playerProfession.exp | professionLevelFromExp }}">
                                    </div>
                                    <button type="submit" class="d-flex ms-auto btn btn-primary btn-block mt-3">Filtrer</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="recipe-controller">
                    {% include 'profession/parts/recipes.html.twig' with {
                        recipes: recipes,
                    } only %}
                </div>

            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
	    let initCraftBtns = () => {
			$('[data-tooltip]').tooltip();
		    const craftBtns = document.querySelectorAll('.craftBtn');
		    craftBtns.forEach(btn => {
			    btn.addEventListener('click', async (e) => {
				    e.preventDefault();
					let maxCraft = btn.dataset.max ?? 1;
					let result = await
                        Swal.fire({
                            title: 'Combien de fois voulez-vous craft cet item ? (max: ' + maxCraft + ')',
                            html: `
                                <input
                                  type="number"
                                  value="1"
                                  min="1"
                                  max="${maxCraft}"
                                  class="swal2-input"
                                  id="craftNumber">`,
                        })

                    if (result.isConfirmed) {
                        const url = btn.getAttribute('href');
						let craftNumber = document.querySelector('#craftNumber').value;
						if(craftNumber > maxCraft) {
							craftNumber = maxCraft;
						}
                        const data = {
                            playerProfessionId: '{{ playerProfession.id }}',
                            craftNumber: craftNumber,
                        }

                        //get filters
                        const filters = document.querySelectorAll('input[name^="filter"]');
                        filters.forEach(filter => {
                            data[filter.name] = filter.value;
                        })

                        let res = await apiFetch(url, data);
                        if(res.success) {
                            document.querySelector('.recipe-controller').innerHTML = res.data.recipesHtml;
                            document.querySelector('.level-container').innerHTML = res.data.level;
                            document.querySelector('#maxLevel').value = res.data.level;
                            initCraftBtns();
                        }
                    }

			    })
		    })
	    }

	    document.addEventListener('DOMContentLoaded', () => {
		    initCraftBtns();
	    });
    </script>
{% endblock %}